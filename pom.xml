<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.vertx.blog</groupId>
	<artifactId>my-first-app-db</artifactId>
	<version>1.0-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-jdbc-client</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>1.5.5</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-mongo-client</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-client</artifactId>
			<version>3.9.1</version>
		</dependency>
		<!-- For the tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
			<version>3.9.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Some other test dependencies to ease integration testing -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.4.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20200518</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>1.50.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-configuration/commons-configuration -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-collections/commons-collections -->
		<!-- <dependency> <groupId>commons-collections</groupId> <artifactId>commons-collections</artifactId> 
			<version>3.2.2</version> </dependency> -->

		<!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
		<!-- <dependency> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
			<version>1.2</version> </dependency> -->

		<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<dependency>
			<groupId>xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml/jackson-xml-databind -->
		<dependency>
			<groupId>com.fasterxml</groupId>
			<artifactId>jackson-xml-databind</artifactId>
			<version>0.6.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.googlecode.log4jdbc/log4jdbc -->
		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.47</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.0</version>
		</dependency>

	</dependencies>

	<build>
		<!-- Need to enable the filtering of the src/test/resources to inject the 
			random port -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>


		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Pick an unused random port, the selected port is set into the "http.port" 
				variable -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<portNames>
								<portName>http.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- We use the maven-antrun-plugin to start the application before the 
				integration tests and stop them afterward -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>start-vertx-app</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- Launch the application as in 'production' using the fatjar. 
									We pass the generated configuration, configuring the http port to the picked 
									one -->
								<exec executable="${java.home}/bin/java"
									dir="${project.build.directory}" spawn="true">
									<arg value="-jar" />
									<arg
										value="${project.artifactId}-${project.version}-fat.jar" />
									<arg value="-conf" />
									<arg
										value="${project.build.directory}/test-classes/my-it-config.json" />
								</exec>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>stop-vertx-app</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<!-- Kill the started process. Finding the right process is a bit 
								tricky. Windows command in in the windows profile (below) -->
							<target>
								<exec executable="bash" dir="${project.build.directory}"
									spawn="false">
									<arg value="-c" />
									<arg
										value="ps ax | grep -i '${project.artifactId}' | awk 'NR==1{print $1}' | xargs kill -SIGTERM" />
								</exec>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Configure the integration-test plugin and pass the 'http.port' as 
				system property -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18.1</version>
				<!-- <configuration> <fork>true</fork> <executable>C:\Program Files\Java\jdk1.8.0_221\bin\javac.exe</executable> 
					</configuration> -->
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemProperties>
								<http.port>${http.port}</http.port>
							</systemProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>io.vertx.core.Launcher</Main-Class>
										<!-- <Main-Verticle>io.vertx.blog.first.MyFirstVerticle</Main-Verticle> -->
										<Main-Verticle>io.vertx.blog.first.MyStarterVerticle</Main-Verticle>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet />
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-6-15-taewon.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			</plugins>			
		</pluginManagement>
	</build>

	<profiles>
		<!-- A profile for windows as the stop command is different -->
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>stop-vertx-app</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<exec executable="wmic" dir="${project.build.directory}"
											spawn="false">
											<arg value="process" />
											<arg value="where" />
											<arg
												value="CommandLine like '%${project.artifactId}%' and not name='wmic.exe'" />
											<arg value="delete" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
